<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Python, Yazılım, ve Programlama</title><link>http://ysar.net/</link><description>This is Yaşar Arabacı's personal blog</description><atom:link href="http://ysar.net/rss.xml" type="application/rss+xml" rel="self"></atom:link><language>tr</language><lastBuildDate>Sun, 15 May 2016 20:29:06 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Hangi Dilleri Öğrenmeliyim</title><link>http://ysar.net/python/programlama-dilleri.html</link><dc:creator>Yaşar Arabacı</dc:creator><description>&lt;div&gt;&lt;p&gt;Merhabalar,&lt;/p&gt;
&lt;p&gt;Uzun süredir blogumu güncelleyemiyordum, neredeyse iki yıl oldu. Bir arkadaşımın
sorduğu bir soruya verdiğim cevapla, uzun süren sessizliği bozmak istedim.&lt;/p&gt;
&lt;p&gt;Soru: Ben elektrik-elektronik mühendisliği öğrencisiyim. Yazılıma merakım çok. Yazılım konusunda kendimi geliştirmek istiyorum.Ancak, kafamda çok soru var.Sistem programlama,oyun programlama istiyorum.Orta seviyede c dilini biliyorum.Hangi dilleri öğrenmeliyim. Yardımcı olursanız sevinirim.&lt;/p&gt;
&lt;p&gt;Cevap:&lt;/p&gt;
&lt;p&gt;Sistem Programlama -&amp;gt; C
Oyun Programlama -&amp;gt; C++ ile DirectX veya OpenGL
Genel Programla, bilimsel programlama -&amp;gt; Python (mutlaka öğrenilmeli)
İşsiz kalmayayım diyorsan -&amp;gt; Java
Windows Programlamaya meraklıyım diyorsan -&amp;gt; C#
Zihin Jimnastiği yapmak istiyorsan -&amp;gt; Haskell
Elektirik Elektronik mühendisi olduğuna göre -&amp;gt; MATLAB, FORTRAN
Web Programlama istersen -&amp;gt; PHP, SQL, HTML, Javascript
İstatistik ve veri analizi -&amp;gt; R
Yeni Trendleri takip ederim dersen -&amp;gt; Go, Rust
Data Cluster sistemlerde devasa işlemler yönetirim diyorsan -&amp;gt; Hadoop ve arkadaşları&lt;/p&gt;
&lt;p&gt;İtirazı veya eklemek istediği noktalar olanlar mail üzerinden bana ulaşabilir.&lt;/p&gt;&lt;/div&gt;</description><guid>http://ysar.net/python/programlama-dilleri.html</guid><pubDate>Sun, 15 May 2016 20:04:00 GMT</pubDate></item><item><title>Git ve Github'a başlangıç</title><link>http://ysar.net/python/git-ve-github.html</link><dc:creator>Yaşar Arabacı</dc:creator><description>&lt;div&gt;&lt;p&gt;Bir arkadaş mail yoluyla Git ve Github kullanımıyla ilgili bir yazı rica etti, hazır vaktim varken hazırlayayım istedim. Bu yazının hedef
kitlesi git ve github kullanmaya tamamen sıfırdan başlayacak kişiler olacak. Dolayısıyla, sadece en temel konulardan bahsedeceğim. Zaten kendim
de ileri seviye bir git kullanıcısı değilim. Ancak, günlük ihtiyaçlarımı idare edecek kadar git kullanabiliyorum. Yine de, git ve github
konusundaki deneyimlerimin, bu yazının ihtiyaçlarını karşılamak için yeterli olacağına inanıyorum. Başlamadan önce değinmek istediğim bir
diğer nokta da, özellikle github'la birlikte git nasıl kullanılır ona değineceğim. Hatta bazen, sadece github'a özgü özelliklere de değineceğim.
Dolayısıyla, eğer github kullanmak istemiyorsanız, bu yazının bazı bölümleri sizi ilgilendirmeyecektir, baştan belirteyim. &lt;/p&gt;&lt;p&gt;&lt;a href="http://ysar.net/python/git-ve-github.html"&gt;Devamını oku…&lt;/a&gt; (8 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><guid>http://ysar.net/python/git-ve-github.html</guid><pubDate>Tue, 22 Jul 2014 00:40:00 GMT</pubDate></item><item><title>Python Çalışma Rehberi</title><link>http://ysar.net/python/python-calisma-rehberi.html</link><dc:creator>Yaşar Arabacı</dc:creator><description>&lt;div&gt;&lt;p&gt;Bir konuyu öğrenmeye başlamanın kendine göre zorlukları vardır. Bunların en başında, çalışma planına karar verilmesi gelir. Özellikle,
internettin kaynak kaynadığı şu zamanlarda, asıl sıkıntı kaynak bulmakdan öte, hangi kaynakların hangi sırada kullanılması gerektiği
sorusudur. Eğer siz de benim gibi, bol bol internetten birşeyler öğrenmeye çalışan bir insansanız, muhtemelen bir öğretmenin eksikliğini
hissetmişsinizdir. Onca materyalin içerisinde size rehberlik edip yol gösterecek kimse yoktur ve belki de boğulduğunuzu hissedersiniz.
&lt;/p&gt;&lt;p&gt;&lt;a href="http://ysar.net/python/python-calisma-rehberi.html"&gt;Devamını oku…&lt;/a&gt; (6 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><guid>http://ysar.net/python/python-calisma-rehberi.html</guid><pubDate>Mon, 21 Jul 2014 00:56:00 GMT</pubDate></item><item><title>L-System aracı güncellemeleri</title><link>http://ysar.net/python/l-system-tool-updates.html</link><dc:creator>Yaşar Arabacı</dc:creator><description>&lt;div&gt;&lt;p&gt;Geçen gün blog'da L-System çizmek için yazdığım bir programı tanıtmıştım. Bazı geliştirmeler yaptım, onlardan da bahsedeyim istedim.
Arayüzün şu anki görüntüsü şu şekilde&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot" src="http://i.imgur.com/myKGvC6.png"&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://ysar.net/python/l-system-tool-updates.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><guid>http://ysar.net/python/l-system-tool-updates.html</guid><pubDate>Thu, 17 Jul 2014 19:11:00 GMT</pubDate></item><item><title>Python L-Sistemi Aracı</title><link>http://ysar.net/python/l-system-tool.html</link><dc:creator>Yaşar Arabacı</dc:creator><description>&lt;div&gt;&lt;p&gt;Merhabalar,&lt;/p&gt;
&lt;p&gt;Birkaç gün önce blog'dan &lt;a href="http://ysar.net/python/fractal.html"&gt;Python kullanarak Fraktal şekiller&lt;/a&gt; çizmek ile ilgili bir
yazı yazmıştım. O yazıyı yazdıktan sonra, turtle'ın bu tarz grafikleri çizmek için fazla yavaş
bir kütüphane olduğunun farkına vardım. Ayrıca, çok pratik de değildi.&lt;/p&gt;
&lt;p&gt;İnternette gördüğüm &lt;a href="http://www.kevs3d.co.uk/dev/lsystems/"&gt;l-sistem çizen&lt;/a&gt; websayfası çok hoşuma gitti,
bir benzerini Python ile yazmaya karar verdim. &lt;/p&gt;&lt;p&gt;&lt;a href="http://ysar.net/python/l-system-tool.html"&gt;Devamını oku…&lt;/a&gt; (2 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><guid>http://ysar.net/python/l-system-tool.html</guid><pubDate>Mon, 14 Jul 2014 05:33:00 GMT</pubDate></item><item><title>Python ile Fraktal Çizme</title><link>http://ysar.net/python/fractal.html</link><dc:creator>Yaşar Arabacı</dc:creator><description>&lt;div&gt;&lt;p&gt;Ne zamandır fraktal geometri meraklısı bir insanım. Python'da turtle kütüphanesini olduğunu farkedince (bunca zamandır nasıl görmediysem...) ilk iş
aklıma fraktal çizmek geldi. Blog'dan da paylaşayım istedim.
&lt;/p&gt;&lt;p&gt;&lt;a href="http://ysar.net/python/fractal.html"&gt;Devamını oku…&lt;/a&gt; (6 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><guid>http://ysar.net/python/fractal.html</guid><pubDate>Sat, 12 Jul 2014 00:29:00 GMT</pubDate></item><item><title>Threading mi, yoksa multiprocessing mi kullanmalıyım</title><link>http://ysar.net/python/threading-vs-multiprocessing.html</link><dc:creator>Yaşar Arabacı</dc:creator><description>&lt;div&gt;&lt;p&gt;Merhaba,&lt;/p&gt;
&lt;p&gt;Uzun süredir blog atıl kalmıştı, kısa bir yazı yazayım istedim.&lt;/p&gt;
&lt;p&gt;Python'a yeni başlayan arkadaşlarda, threading ve multiprocessing konusu kafa karıştırıyor. Kafa karıştıran iki önemli husus var;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Threading ve Multiprocessing mantığı nedir?&lt;/li&gt;
&lt;li&gt;Hangisi ne zaman tercih edilmelidir?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bununla birlikte, birkaç koldan çalışan işlemler arasında tesanüd nasıl sağlanır, onu da bilmek gerekiyor. &lt;/p&gt;&lt;p&gt;&lt;a href="http://ysar.net/python/threading-vs-multiprocessing.html"&gt;Devamını oku…&lt;/a&gt; (2 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><guid>http://ysar.net/python/threading-vs-multiprocessing.html</guid><pubDate>Thu, 10 Jul 2014 00:22:00 GMT</pubDate></item><item><title>Python Metot Türleri</title><link>http://ysar.net/python/metot-turleri.html</link><dc:creator>Yaşar Arabacı</dc:creator><description>&lt;div&gt;&lt;p&gt;Python sınıflarında, temel olarak 3 farklı şekilde metot tanımı yapılabilir.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Örnek (Instance) metotları&lt;/li&gt;
&lt;li&gt;Statik (&lt;code&gt;@staticmethod&lt;/code&gt;) metotlar&lt;/li&gt;
&lt;li&gt;Sınıf (&lt;code&gt;@classmethod&lt;/code&gt;) metotları&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bunların arasındaki başlıca fark, aldıkları argümanlardır. Örnek metotlarına, ilk argüman olarak, objenin kendisine bir referans gönderilir. Bu argümana,
geleneksel olarak &lt;code&gt;self&lt;/code&gt; adı verilir. Statik metotlar, kendisini çağıran sınıf veya örnek hakkında herhangi bir bilgiye
sahip değildir. Bunlar, işlevini kaybetmeden, sınıf dışında da aynı şekilde tanımlanabilir. Sınıf metotları ise, otomatik
olarak, kendisini çağıran sınıfa veya örneğin sınıfına bir referans alır. Bu argümana da geleneksel olarak &lt;code&gt;cls&lt;/code&gt; adı verilir. &lt;/p&gt;&lt;p&gt;&lt;a href="http://ysar.net/python/metot-turleri.html"&gt;Devamını oku…&lt;/a&gt; (3 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><guid>http://ysar.net/python/metot-turleri.html</guid><pubDate>Fri, 15 Nov 2013 16:17:06 GMT</pubDate></item><item><title>Devlet Siteleri</title><link>http://ysar.net/diger/devlet-siteleri.html</link><dc:creator>Yaşar Arabacı</dc:creator><description>&lt;div&gt;&lt;p&gt;Ben genelde çok şikayet eden bir insan değilim. Devlet sitelerinin de, devlet sitesi olduğu düşünüldüğünde,
yüksek kaliteli siteler beklemek doğru olmaz. Ama yine de, bunların ufak tefek sıkıntıları birleşip,
kullanıcıyı yıldırabiliyor.&lt;/p&gt;
&lt;p&gt;Sık sık kullanmaya ihtiyaç duyduğum devlet sitelerinde, muhakkak en ez bir özellik bozuk, sinir bozucu, kötü tasarlanmış veya
nasıl çalıştığı belli değil. Devlet siteleri, kullanıcı memnuniyetini ya göz ardı etmiş, ya da benim dikkatimi
çeken şeyler, bu sitelerin kullanıcı memnuniyeti standardları içinde yer almıyor. &lt;/p&gt;&lt;p&gt;&lt;a href="http://ysar.net/diger/devlet-siteleri.html"&gt;Devamını oku…&lt;/a&gt; (3 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><guid>http://ysar.net/diger/devlet-siteleri.html</guid><pubDate>Wed, 13 Nov 2013 17:47:00 GMT</pubDate></item><item><title>Evrimsel Algoritmalar</title><link>http://ysar.net/algoritma/evrimsel-algoritmalar.html</link><dc:creator>Yaşar Arabacı</dc:creator><description>&lt;div&gt;&lt;p&gt;Ne zamandır, evrimsel algoritmalar ve genetik algoritmalarına göz atmak istiyordum.. Bugün biraz fırsat bulup, evrimsel algoritmalara
göz attım.&lt;/p&gt;
&lt;p&gt;Evrimsel algoritma, bana biraz breadth-first search algoritmalarını andırdı. Genel gidişat şu şekilde:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rastgele bireylerden ilk popülasyonu oluştur&lt;/li&gt;
&lt;li&gt;Her bireyin, aranan sonuca benzerliğini test et&lt;/li&gt;
&lt;li&gt;En iyi bireylerden, mutasyon ve eşleşme ile yeni bireyler oluştur.&lt;/li&gt;
&lt;li&gt;En iyi bireylerden yeni popülasyon oluştur.&lt;/li&gt;
&lt;li&gt;Yeterince iyi bireyler elde edene kadar tekrarla&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bu tür algoritmaları genelde arama uzayının çok büyük olduğu durumlarda kullanıyorlar. Daha önce gördüğüm algoritmalara
nazaran, doğru sonuca bir hayli hızlı yaklaşıyor, ancak, bazı sıkıntılar da yaşadım, bunlardan birazdan bahsedeceğim. &lt;/p&gt;&lt;p&gt;&lt;a href="http://ysar.net/algoritma/evrimsel-algoritmalar.html"&gt;Devamını oku…&lt;/a&gt; (7 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><guid>http://ysar.net/algoritma/evrimsel-algoritmalar.html</guid><pubDate>Sun, 03 Nov 2013 23:59:00 GMT</pubDate></item></channel></rss>